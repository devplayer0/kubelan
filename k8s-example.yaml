---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubelan
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubelan
rules:
  - apiGroups: [discovery.k8s.io]
    resources: [endpointslices]
    verbs: [watch, list]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubelan
roleRef:
  kind: ClusterRole
  name: kubelan
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: kubelan
    namespace: default
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kubelan
data:
  kubelan.yaml: |
    log_level: DEBUG
    services:
      - kubelan
    hooks:
      up:
        - sh
        - '-c'
        - |
          k8s_replica() {
            r="$(echo $1 | sed -r '/^.+-[0-9]+/!{q1}; {s|^.+-([0-9]+)|\1|}')"
            ([ $? -eq 0 ] && echo "$r") || echo 0
          }

          replica="$(k8s_replica "$HOSTNAME")"
          ip="192.168.69.$(($replica + 1))/24"

          ip addr add "$ip" dev "$IFACE"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kubelan
  labels:
    app: kubelan
spec:
  serviceName: kubelan
  replicas: 3
  selector:
    matchLabels:
      app: kubelan
  template:
    metadata:
      labels:
        app: kubelan
    spec:
      serviceAccountName: kubelan
      containers:
        - name: alpine
          image: alpine:3.12
          command: [sleep, infinity]
        - name: kubelan
          image: ghcr.io/devplayer0/kubelan:latest
          imagePullPolicy: Always
          env:
            - name: KL_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: KL_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - name: http
              containerPort: 8181
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
          securityContext:
            capabilities:
              add: [NET_ADMIN]
          volumeMounts:
            - name: kubelan
              mountPath: /run/config
      volumes:
        - name: kubelan
          configMap:
            name: kubelan
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kubelan
  name: kubelan
spec:
  selector:
    app: kubelan
  type: ClusterIP
  clusterIP: None
